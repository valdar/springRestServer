<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:broker="http://activemq.apache.org/schema/core"
	xsi:schemaLocation="
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">	
    
    <bean id="applicationProperties" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:springRestServer.properties" />
	</bean>
    
    <!-- setup Atomikos for XA transaction -->
    <bean id="atomikosTransactionManager"
          class="com.atomikos.icatch.jta.UserTransactionManager"
          init-method="init" destroy-method="close" depends-on="jmsXaConnectionFactory">
        <!-- when close is called, should we force transactions to terminate or not? -->
        <property name="forceShutdown" value="false"/>
    </bean>

    <bean id="atomikosUserTransaction" class="com.atomikos.icatch.jta.UserTransactionImp" depends-on="jmsXaConnectionFactory">
        <property name="transactionTimeout" value="1000"/>
    </bean>

    <bean id="connectionFactory"
          class="com.atomikos.jms.AtomikosConnectionFactoryBean" depends-on="jmsXaConnectionFactory">
        <property name="uniqueResourceName" value="amq1"/>
        <property name="xaConnectionFactory" ref="jmsXaConnectionFactory"/>
        <property name="minPoolSize" value="10" />
        <property name="maxPoolSize" value="100" />
    </bean>

    <!-- this is the Spring JtaTransactionManager which under the hood uses Atomikos -->
    <bean id="jtaTransactionManager"
          class="org.springframework.transaction.jta.JtaTransactionManager" depends-on="jmsXaConnectionFactory">
        <property name="transactionManager" ref="atomikosTransactionManager"/>
        <property name="userTransaction" ref="atomikosUserTransaction"/>
    </bean>

	<bean id="jmsTemplate" class="org.springframework.jms.core.JmsTemplate">
		<property name="connectionFactory" ref="connectionFactory" />
		<property name="sessionTransacted" value="true" />
	</bean>
	
</beans>